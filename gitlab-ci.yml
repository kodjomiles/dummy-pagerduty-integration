stages:
  - trigger_incident

trigger_pagerduty_incident:
  stage: trigger_incident
  script:
    - |
      # Inform starting of PagerDuty trigger
      curl -X PATCH \
        -H "Authorization: Bearer ${PORT_CLIENT_ID}:${PORT_CLIENT_SECRET}" \
        -d '{"logMessage": "About to trigger PagerDuty incident.. ⛴️"}' \
        https://api.getport.io/actions/${PORT_RUN_ID}/logs

      # Send Event to PagerDuty
      response=$(curl -s -X POST \
        -H "Content-Type: application/json" \
        -d '{
              "payload": {
                "summary": "'"${CI_JOB_NAME}"'",
                "source": "GitLab CI",
                "severity": "'"${CI_PIPELINE_SOURCE}"'"
              },
              "event_action": "'"${CI_JOB_STAGE}"'",
              "routing_key": "'"${PAGERDUTY_ROUTING_KEY}"'"
            }' \
        https://events.pagerduty.com/v2/enqueue)

      incident_id=$(echo $response | jq -r '.dedup_key')

      # Get PagerDuty Incident Details
      incident_details=$(curl -s -X GET \
        -H "Authorization: Token token=${PAGERDUTY_API_KEY}" \
        -H "Accept: application/vnd.pagerduty+json;version=2" \
        https://api.pagerduty.com/incidents/${incident_id})

      # Log Before Updating Entity
      curl -X PATCH \
        -H "Authorization: Bearer ${PORT_CLIENT_ID}:${PORT_CLIENT_SECRET}" \
        -d '{"logMessage": "Reporting the updated incident back to port ..."}' \
        https://api.getport.io/actions/${PORT_RUN_ID}/logs

      # Update Entity
      curl -X POST \
        -H "Authorization: Bearer ${PORT_CLIENT_ID}:${PORT_CLIENT_SECRET}" \
        -H "Content-Type: application/json" \
        -d '{
              "identifier": "'"${incident_id}"'",
              "title": "'"${CI_JOB_NAME}"'",
              "properties": {
                "status": "'"$(echo $incident_details | jq -r '.incident.status')"'", 
                "url": "'"$(echo $incident_details | jq -r '.incident.self')"'", 
                "urgency": "'"$(echo $incident_details | jq -r '.incident.urgency')"'", 
                "responder": "'"$(echo $incident_details | jq -r '.incident.assignments[0].assignee.summary')"'", 
                "escalation_policy": "'"$(echo $incident_details | jq -r '.incident.escalation_policy.summary')"'", 
                "created_at": "'"$(echo $incident_details | jq -r '.incident.created_at')"'", 
                "updated_at": "'"$(echo $incident_details | jq -r '.incident.updated_at')"'" 
              },
              "relations": "'"${CI_JOB_ID}"'"
            }' \
        https://api.getport.io/entities/upsert

      # Log After Updating Entity
      curl -X PATCH \
        -H "Authorization: Bearer ${PORT_CLIENT_ID}:${PORT_CLIENT_SECRET}" \
        -d '{"logMessage": "PagerDuty incident triggered! ✅"}' \
        https://api.getport.io/actions/${PORT_RUN_ID}/logs
  only:
    - master
  variables:
    PAGERDUTY_API_KEY: ${{ secrets.PAGERDUTY_API_KEY }}
    PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
    PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
    PORT_RUN_ID: ${{fromJson(inputs.port_context).run_id}}
    PAGERDUTY_ROUTING_KEY: ${{ github.event.inputs.routing_key }}
    CI_PIPELINE_SOURCE: ${{ github.event.inputs.source }}
    CI_JOB_STAGE: ${{ github.event.inputs.event_action }}
    CI_JOB_NAME: ${{ github.event.inputs.summary }}
    CI_JOB_ID: ${{ github.event.inputs.port_context }}
